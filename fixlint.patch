diff --git a/provisioning/api/handler.go b/provisioning/api/handler.go
index 0e36e0d..ea03d95 100644
--- a/provisioning/api/handler.go
+++ b/provisioning/api/handler.go
@@ -5,7 +5,7 @@ package api
 import (
 	"context"
 	"fmt"
-	"io/ioutil"
+	"io"
 	"net/http"
 	"time"

@@ -69,7 +69,7 @@ func (o *Handler) Submit(c *gin.Context) {
 	}

 	// read body
-	payload, err := ioutil.ReadAll(c.Request.Body)
+	payload, err := io.ReadAll(c.Request.Body)
 	if err != nil {
 		ReportProblem(c,
 			http.StatusBadRequest,
diff --git a/verification/api/handler.go b/verification/api/handler.go
index e6d0105..fb4af10 100644
--- a/verification/api/handler.go
+++ b/verification/api/handler.go
@@ -8,7 +8,7 @@ import (
 	"encoding/json"
 	"errors"
 	"fmt"
-	"io/ioutil"
+	"io"
 	"net/http"
 	"path"
 	"strconv"
@@ -312,7 +312,7 @@ func (o *Handler) SubmitEvidence(c *gin.Context) {
 	}

 	// read body (i.e., evidence)
-	evidence, err := ioutil.ReadAll(c.Request.Body)
+	evidence, err := io.ReadAll(c.Request.Body)
 	if err != nil || len(evidence) == 0 {
 		ReportProblem(c,
 			http.StatusBadRequest,
diff --git a/vts/plugins/scheme-psa-iot/main_test.go b/vts/plugins/scheme-psa-iot/main_test.go
index 6c38423..0f88796 100644
--- a/vts/plugins/scheme-psa-iot/main_test.go
+++ b/vts/plugins/scheme-psa-iot/main_test.go
@@ -5,7 +5,7 @@ package main

 import (
 	"encoding/json"
-	"io/ioutil"
+	"os"
 	"testing"

 	"github.com/veraison/services/proto"
@@ -15,7 +15,7 @@ import (
 )

 func Test_GetTrustAnchorID_ok(t *testing.T) {
-	tokenBytes, err := ioutil.ReadFile("test/psa-token.cbor")
+	tokenBytes, err := os.ReadFile("test/psa-token.cbor")
 	require.NoError(t, err)

 	token := proto.AttestationToken{
@@ -34,10 +34,10 @@ func Test_GetTrustAnchorID_ok(t *testing.T) {
 }

 func Test_ExtractVerifiedClaimsInteg_ok(t *testing.T) {
-	tokenBytes, err := ioutil.ReadFile("test/psaintegtoken.cbor")
+	tokenBytes, err := os.ReadFile("test/psaintegtoken.cbor")
 	require.NoError(t, err)

-	taEndValBytes, err := ioutil.ReadFile("test/ta-integ-endorsements.json")
+	taEndValBytes, err := os.ReadFile("test/ta-integ-endorsements.json")
 	require.NoError(t, err)

 	scheme := &Scheme{}
@@ -55,10 +55,10 @@ func Test_ExtractVerifiedClaimsInteg_ok(t *testing.T) {
 }

 func Test_ExtractVerifiedClaims_ok(t *testing.T) {
-	tokenBytes, err := ioutil.ReadFile("test/psa-token.cbor")
+	tokenBytes, err := os.ReadFile("test/psa-token.cbor")
 	require.NoError(t, err)

-	taEndValBytes, err := ioutil.ReadFile("test/ta-endorsements.json")
+	taEndValBytes, err := os.ReadFile("test/ta-endorsements.json")
 	require.NoError(t, err)

 	scheme := &Scheme{}
@@ -80,14 +80,14 @@ func Test_ExtractVerifiedClaims_ok(t *testing.T) {
 }

 func Test_AppraiseEvidence_ok(t *testing.T) {
-	extractedBytes, err := ioutil.ReadFile("test/extracted.json")
+	extractedBytes, err := os.ReadFile("test/extracted.json")
 	require.NoError(t, err)

 	var ec proto.EvidenceContext
 	err = json.Unmarshal(extractedBytes, &ec)
 	require.NoError(t, err)

-	endorsementsBytes, err := ioutil.ReadFile("test/endorsements.json")
+	endorsementsBytes, err := os.ReadFile("test/endorsements.json")
 	require.NoError(t, err)

 	scheme := &Scheme{}
@@ -99,7 +99,7 @@ func Test_AppraiseEvidence_ok(t *testing.T) {
 }

 func Test_AppraiseEvidenceMultEndorsement_ok(t *testing.T) {
-	extractedBytes, err := ioutil.ReadFile("test/extracted.json")
+	extractedBytes, err := os.ReadFile("test/extracted.json")
 	require.NoError(t, err)

 	var ec proto.EvidenceContext
@@ -107,7 +107,7 @@ func Test_AppraiseEvidenceMultEndorsement_ok(t *testing.T) {
 	require.NoError(t, err)

 	var endorsemementsArray []string
-	endorsementsBytes, err := ioutil.ReadFile("test/mult-endorsements.json")
+	endorsementsBytes, err := os.ReadFile("test/mult-endorsements.json")
 	require.NoError(t, err)
 	err = json.Unmarshal(endorsementsBytes, &endorsemementsArray)
 	require.NoError(t, err)
diff --git a/vts/plugins/scheme-tcg-dice/main_test.go b/vts/plugins/scheme-tcg-dice/main_test.go
index c163a77..1d73302 100644
--- a/vts/plugins/scheme-tcg-dice/main_test.go
+++ b/vts/plugins/scheme-tcg-dice/main_test.go
@@ -4,7 +4,7 @@
 package main

 import (
-	"io/ioutil"
+	"os"
 	"testing"

 	"github.com/veraison/services/proto"
@@ -29,10 +29,10 @@ var DeviceID = []uint8{
 }

 func Test_ExtractVerifiedClaims_ok(t *testing.T) {
-	deviceData, err := ioutil.ReadFile("test/DeviceCerts.pem")
+	deviceData, err := os.ReadFile("test/DeviceCerts.pem")
 	require.NoError(t, err, "could not read device certs file")

-	taData, err := ioutil.ReadFile("test/TrustAnchor.pem")
+	taData, err := os.ReadFile("test/TrustAnchor.pem")
 	require.NoError(t, err, "could not read trust anchor file")

 	s := &Scheme{}
diff --git a/vts/plugins/scheme-tpm-enacttrust/main_test.go b/vts/plugins/scheme-tpm-enacttrust/main_test.go
index a49b18b..fcf1396 100644
--- a/vts/plugins/scheme-tpm-enacttrust/main_test.go
+++ b/vts/plugins/scheme-tpm-enacttrust/main_test.go
@@ -7,7 +7,7 @@ import (
 	"encoding/base64"
 	"encoding/pem"
 	"fmt"
-	"io/ioutil"
+	"os"
 	"testing"

 	"github.com/stretchr/testify/assert"
@@ -17,7 +17,7 @@ import (
 )

 func Test_DecodeAttestationData_ok(t *testing.T) {
-	data, err := ioutil.ReadFile("test/tokens/basic.token")
+	data, err := os.ReadFile("test/tokens/basic.token")
 	require.NoError(t, err)

 	var decoded Token
@@ -30,7 +30,7 @@ func Test_DecodeAttestationData_ok(t *testing.T) {
 }

 func Test_GetTrustAnchorID_ok(t *testing.T) {
-	data, err := ioutil.ReadFile("test/tokens/basic.token")
+	data, err := os.ReadFile("test/tokens/basic.token")
 	require.NoError(t, err)

 	ta := proto.AttestationToken{
@@ -47,7 +47,7 @@ func Test_GetTrustAnchorID_ok(t *testing.T) {
 }

 func readPublicKeyBytes(path string) ([]byte, error) {
-	buf, err := ioutil.ReadFile(path)
+	buf, err := os.ReadFile(path)
 	if err != nil {
 		return nil, err
 	}
@@ -60,7 +60,7 @@ func readPublicKeyBytes(path string) ([]byte, error) {
 }

 func Test_ExtractVerifiedClaims_ok(t *testing.T) {
-	data, err := ioutil.ReadFile("test/tokens/basic.token")
+	data, err := os.ReadFile("test/tokens/basic.token")
 	require.NoError(t, err)

 	ta := proto.AttestationToken{
diff --git a/vts/plugins/scheme-tpm-enacttrust/test/cmd/gen-token/main.go b/vts/plugins/scheme-tpm-enacttrust/test/cmd/gen-token/main.go
index 07c9e85..dc33e9c 100644
--- a/vts/plugins/scheme-tpm-enacttrust/test/cmd/gen-token/main.go
+++ b/vts/plugins/scheme-tpm-enacttrust/test/cmd/gen-token/main.go
@@ -13,7 +13,6 @@ import (
 	"encoding/pem"
 	"flag"
 	"fmt"
-	"io/ioutil"
 	"os"

 	"github.com/google/go-tpm/tpm2"
@@ -55,7 +54,7 @@ func makeAttestationData(desc *TokenDescription) (*tpm2.AttestationData, error)
 }

 func readTokenDescription(path string) (*TokenDescription, error) {
-	buf, err := ioutil.ReadFile(path)
+	buf, err := os.ReadFile(path)
 	if err != nil {
 		return nil, err
 	}
@@ -69,7 +68,7 @@ func readTokenDescription(path string) (*TokenDescription, error) {
 }

 func readPrivateKey(path string) (*ecdsa.PrivateKey, error) {
-	buf, err := ioutil.ReadFile(path)
+	buf, err := os.ReadFile(path)
 	if err != nil {
 		return nil, err
 	}
@@ -154,7 +153,7 @@ func main() {
 		os.Exit(1)
 	}

-	if err := ioutil.WriteFile(outPath, buff.Bytes(), 0600); err != nil {
+	if err := os.WriteFile(outPath, buff.Bytes(), 0600); err != nil {
 		fmt.Printf("ERROR could not write %q: %v\n", outPath, err)
 		os.Exit(1)
 	}
